exit
id
@model
type
exit
exot
exit
c
params
exit
params
exit
vote.save
vote
exit
params
exit
self.new.x_votes
self.new.x_vote
self.new.x_id
self.new.x_i
self.new.type
exit
self.new.type
exit
self.new.type
self.new.x_votes
exit
self.new.test_method
self.new.rating
exit
def new_met
def new_method
def new_m
self.new.send("rating")
continue
self.new.votes_list
exit
self.new.votes_list
self.votes_list
self
exit
self.new.type
self.type
exit
self.methods
self
exit
self
self.instances
self
self.question_votes
question.question_votes
exit
self.name.downcase
self.name
self.new.class
self.new
self.class
self.type
type
exit
self.new.asdf
alias_method :asdf, "question_votes".to_sym
alias_method :id_test, "question_votes".to_sym
alias_method :id_test, :vote_column
alias_method :id_test
self.new.id_to_vote
self.new.type
exit
self.new.type
self.new.methods
self.methods
continue
next
self.new.methods
self.new
self.methods
self.type
self.question_votes
self
alias_method
exit
self.new.something_random
exit
self.new.something_random
self.new
self.class
self.methods
self.class
self
self.vote_column
self.something_random
self
exit
Question.find(1).question_votes
exit
Question.find(1).methods
Question.find(1).question_votes
Question.find(1).answers
Question.find(1).type
Question.find(1).question_votes
Question.find(1)
Question.find(1).question_votes
Question.new.question_votes
Question.question_votes
self.new.question_votes
self.new.something_random
self
self.something_random
something_random
exit
user.send(vote_column).find_by(question_id: self.id)
user.send(vote_column).find(self.id)
user.send(vote_column).find_by(id: self.id)
self
user.send(vote_column)
continue
n
user.send(vote_column).find_by(id: self.id).nil?
user.send(vote_column).find_by(id: self.id)
exit
self.send(self.vote_column).find_by(user_id: user.id)e
self.send(self.vote_column).find_by(user_id: user.id)
self.send(self.vote_column).find_by(user.id)
user
self.send(self.vote_column).find_by(question_id: self.id)
self.send(self.vote_column)
self.send(self.vote_column).find_by_user_id(current_user.id)
self.send(self.vote_column)
self.send(self.vote_column).find(self.id)
self.id
vote
n
continue
exit
self.send(self.vote_column)
self.vote_column
self.send(self.vote_column)
self
exit
continue
exit
Question.new.vote_column
Question.new.column_name
Question.new.type
Question.new.tyoe
Question.new.name
Question.new.type
Question.new.vote
Question.new.name
Question.new
self.class
self
exit
Question.new.vote_column
Question.new
votes(Question.new)
type
self.vote_column
exit
model.class.vote_column
model.vote_column
model.type
model.question_votes
model.class
model
exit
model.class
model
self.class
self
exit
@vote
voted?(@vote)
@vote.vote_type
@vote
voted?(@vote)
@vote
exit
type
continue
exit
current_user.question_votes.find_by("question_id = ?", params[:id])
current_user.question_votes.where("question_id = ?", params[:id])
current_user.question_votes
question_vote
question_vote.question_id
question_vote
n
question_vote
n
exit
QuestionVote.voting_for_id
QuestionVote.type
exit
QuestionVote.self.type
QuestionVote.type
exit
self.to_s.split("Vote").join("").downcase.to_sym
exit
self.new.question_id
self.[:question_id]
self[:question_id]
self.question_id
self
exit
n
self
self.class
exit
QuestionVote
QuestionVote.where
self.class
self
params[:id]
current_user.question_votes.find_by_question_id(1)
current_user.question_votes.find_by_question_id(121)
current_user.question_votes.find_by_question_id
current_user.question_votes
exit
self.question_vote
self.question_
self.question_vote
self.methods
self.question_vote_questions
self.question_vote_question
self.question_vote_ids
self.question_vote_
self.questions
self.questiond
self.question
self.question_votes.question
self.question_votes.questions
self.question_votes.question
self.question_votes
self
exit
current_user.question_votes
current_user
exit
vote.send("question_id")
vote.send("question_id=", 10)
vote.send("question_id=")
vote.send("question_id")=
vote.send("question_id")
vote.send("question_id", 10)
vote.send("question_id") = 10
vote.send("question_id")
model
vote
n
vote
exit
n
self.send("#{model}_votes").find_by("#{model_key} = ?", id).nil?
