c
Question.find(params[:id]).remove_vote(current_user, params[:id])
c
Question.find(params[:id]).remove_vote(current_user, params[:id])c
Question.find(params[:id]).remove_vote(current_user, params[:id])
c
Question.find(params[:id]).remove_vote(current_user, params[:id])
Question.find(params[:id]).remove_vote(current_user)
Question.find(params[:id]).remove_vote
Question.find(params[:id])
Question
c
session.delete("user")
session.delete
session.delete!
c
session.delete("user")
c
vote.save!
vote.vote_type
vote.type
vote
c
user.votes.find_by(type: type, voting_id: self.id).vote_type
user.votes.find_by(type: type, voting_id: self.id).type
user.votes.find_by(type: type, voting_id: self.id)
c
vote
c
Vote.all.first
Question.all.first
Question.all
Vote.all.first.user_id
Vote.all.first.
Vote.all.first.type
Vote.all
vote.save!
vote
n
vote
n
vote
n
vote
vpte
n
vote
n
vote
c
vote
c
session
session.delete("user")
session["user"].delete
exit
Vote.all.each do |x| x.destroy end
user.votes
user.vote
Vote.all
Vote.all.first.destroy
Vote.all
Vote.all.first.destroy
Vote.all
Vote.all.first.destroy!
Vote.all
Question.all
Vote.all
user.votes
vote
c
vote
c
vote
vote.type
vote
vote.save!
exit
Vote.find_by(type: "Question")
Vote.find_by(type: "Question").nil?
Vote.find_by(vote).nil?
Vote.all.nil?
Vote.all
Vote.all.first
Vote.all
Vote.where(vote_type: "upvote")
Vote.where(type: "Question", vote_type: "upvote")
Vote.w
Vote.where(type: "Question", vote_type: "upvote")
Vote.where(type: "Question", vote_type: "upvote", voting_id: 1)
Vote.where(type: "Question", vote_type: "upvote", voting_id: self.id)
Vote.where(type: type, vote_type: "upvote", voting_id: self.id)
Vote.where()
Vote.where
Vote
exit
id
@model
type
exit
exot
exit
c
params
exit
params
exit
vote.save
vote
exit
params
exit
self.new.x_votes
self.new.x_vote
self.new.x_id
self.new.x_i
self.new.type
exit
self.new.type
exit
self.new.type
self.new.x_votes
exit
self.new.test_method
self.new.rating
exit
def new_met
def new_method
def new_m
self.new.send("rating")
continue
self.new.votes_list
exit
self.new.votes_list
self.votes_list
self
exit
self.new.type
self.type
exit
self.methods
self
exit
self
self.instances
self
self.question_votes
question.question_votes
exit
self.name.downcase
self.name
self.new.class
self.new
self.class
self.type
type
exit
self.new.asdf
alias_method :asdf, "question_votes".to_sym
alias_method :id_test, "question_votes".to_sym
alias_method :id_test, :vote_column
alias_method :id_test
self.new.id_to_vote
self.new.type
exit
self.new.type
self.new.methods
self.methods
continue
next
self.new.methods
self.new
self.methods
self.type
self.question_votes
self
alias_method
exit
self.new.something_random
exit
self.new.something_random
self.new
self.class
self.methods
self.class
self
self.vote_column
self.something_random
self
exit
Question.find(1).question_votes
exit
Question.find(1).methods
Question.find(1).question_votes
Question.find(1).answers
Question.find(1).type
Question.find(1).question_votes
Question.find(1)
Question.find(1).question_votes
Question.new.question_votes
Question.question_votes
self.new.question_votes
self.new.something_random
self
self.something_random
something_random
exit
user.send(vote_column).find_by(question_id: self.id)
user.send(vote_column).find(self.id)
user.send(vote_column).find_by(id: self.id)
self
user.send(vote_column)
continue
n
user.send(vote_column).find_by(id: self.id).nil?
user.send(vote_column).find_by(id: self.id)
exit
self.send(self.vote_column).find_by(user_id: user.id)e
self.send(self.vote_column).find_by(user_id: user.id)
self.send(self.vote_column).find_by(user.id)
user
self.send(self.vote_column).find_by(question_id: self.id)
self.send(self.vote_column)
self.send(self.vote_column).find_by_user_id(current_user.id)
self.send(self.vote_column)
self.send(self.vote_column).find(self.id)
self.id
vote
n
continue
exit
self.send(self.vote_column)
self.vote_column
self.send(self.vote_column)
self
exit
continue
exit
Question.new.vote_column
Question.new.column_name
Question.new.type
Question.new.tyoe
Question.new.name
Question.new.type
Question.new.vote
Question.new.name
Question.new
self.class
self
exit
Question.new.vote_column
Question.new
votes(Question.new)
type
self.vote_column
exit
